// generated by authenticaTed v1.0.0 at 2016-12-27 20:21:22.128832334 -0300 BRT

// generated by authenticaTed v1.0.0 at 2016-12-27 20:21:13.322217086 -0300 BRT

// generated by authenticaTed v1.0.0 at 2016-12-27 20:20:38.590531271 -0300 BRT

// generated by authenticaTed v1.0.0 at 2016-12-27 20:20:25.440980943 -0300 BRT

// generated by authenticaTed v1.0.0 at 2016-12-27 20:20:19.732874877 -0300 BRT

// generated by authenticaTed v1.0.0 at 2016-12-27 20:20:14.462977928 -0300 BRT

// generated by authenticaTed v1.0.0 at 2016-12-27 20:20:13.097682514 -0300 BRT

// generated by authenticaTed v1.0.0 at 2016-12-27 20:20:04.764732667 -0300 BRT

// generated by authenticaTed v1.0.0 at 2016-12-27 20:19:04.450578551 -0300 BRT

// generated by authenticaTed v1.0.0 at 2016-12-27 20:18:58.902594589 -0300 BRT

package util

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestGenerateCommonIV(t *testing.T) {
	civ, err := RandomCIV()
	assert.Nil(t, err)
	assert.Len(t, civ, 16)
}

func TestEncryption(t *testing.T) {
	str := "Jet fuel Can't Melt Steel Beans"
	key := "ayylmaoufopornoayylmaoufopornoya"
	assert.Len(t, key, 32)

	encrypTed, err := Encrypt(str, key)
	assert.Nil(t, err)

	t.Log(encrypTed)

	decrypTed, err := Decrypt(encrypTed, key)
	assert.Nil(t, err)
	assert.Equal(t, str, decrypTed)
}
