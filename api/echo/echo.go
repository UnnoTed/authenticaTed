// generated by authenticaTed v1.0.0 at 2016-12-27 20:21:22.133065798 -0300 BRT

// generated by authenticaTed v1.0.0 at 2016-12-27 20:21:13.327479095 -0300 BRT

// generated by authenticaTed v1.0.0 at 2016-12-27 20:20:38.594280238 -0300 BRT

// generated by authenticaTed v1.0.0 at 2016-12-27 20:20:25.44673579 -0300 BRT

// generated by authenticaTed v1.0.0 at 2016-12-27 20:20:19.739218853 -0300 BRT

// generated by authenticaTed v1.0.0 at 2016-12-27 20:20:14.466788402 -0300 BRT

// generated by authenticaTed v1.0.0 at 2016-12-27 20:20:13.101647768 -0300 BRT

// generated by authenticaTed v1.0.0 at 2016-12-27 20:20:04.768630026 -0300 BRT

// generated by authenticaTed v1.0.0 at 2016-12-27 20:19:04.457279802 -0300 BRT

// generated by authenticaTed v1.0.0 at 2016-12-27 20:18:58.909160685 -0300 BRT

package echo

import (
	auth "github.com/UnnoTed/authenticaTed"

	"github.com/labstack/echo"
)

// SetAPI inserts all rest api endpoints
func SetAPI(ee **echo.Echo) error {
	e := *ee

	err := auth.Setup()
	if err != nil {
		return err
	}

	err = auth.Connect()
	if err != nil {
		return err
	}

	api := new(API)
	_users := e.Group("/api/v1/users")
	{
		// many
		_users.GET("", api.Get, api.Middleware(auth.UserPowerAdmin)) // gets user list

		// single
		_users.POST("", api.Post)          // create user
		_users.POST("/auth", api.PostAuth) // auth user

		// specific id
		_users.GET("/:id", api.GetID)                                             // gets specific user
		_users.PUT("/:id", api.PutID, api.Middleware(auth.UserPowerNormal))       // updates specific user
		_users.DELETE("/:id", api.DeleteID, api.Middleware(auth.UserPowerNormal)) // soft deletes specific user
	}

	return nil
}

// Stop the database connection from authenticaTed
func Stop() error {
	return auth.Disconnect()
}
